# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@1.2

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    docker:
      - image: cimg/python:3.6.10
        environment:
          DATABASE_URL: postgresql://postgresql:test123@localhost/test?sslmode=disable
      - image: circleci/postgres:9.6.2
        environment:
          POSTGRES_USER: postgresql
          POSTGRES_DB: test
    steps:
      - checkout
      - run: sudo apt-get update
      - run: sudo apt-get install postgresql-client
      - run: whoami
      - run: |
          psql \
          -d "postgresql://postgresql:test123@localhost/test?sslmode=disable" \
          -c "CREATE TABLE metrics (id serial NOT NULL PRIMARY KEY, url TEXT, http_status TEXT, day TEXT, month TEXT, year TEXT, time TEXT,elapsed_time TEXT, pattern_verified TEXT);"

      - run:
          name: Retrieve Kafka C Handler
          command: |
            git clone https://github.com/edenhill/librdkafka.git
            cd librdkafka && ./configure --prefix /usr && make && sudo make install
      - python/install-packages:
          pkg-manager: pip

      - run:
          name: Run tests
          command: |
            python3 -m unittest tests/test_db_operations.py
            python3 -m unittest tests/test_events_handler_class.py
      - run:
          name: Pubish package
          command: |
            python3 -m pip install --upgrade build
            pip3 install twine
            python -m build
            python3 -m twine upload dist/*
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: tr1
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build_and_publish:
    jobs:
      - build
